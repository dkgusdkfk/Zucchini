# broadcast.cocoblue.me.conf
upstream docker-front {
  server frontend:3000;
}

server {
  listen 80;

  location / {
      proxy_pass         http://docker-front;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Host $server_name;
  }
}

# server {
#     listen 80;
#     listen [::]:80;

#     server_name i9a209.p.ssafy.io;
#     location / {
#         return 301 https://$host$request_uri;
#     }

#     location /robots.txt {
#         return 200 "User-agent: *\nDisallow: /";
#     }
# }

# server {
#     listen 443 ssl;
#     server_name broadcast.cocoblue.me;

#     ssl_certificate /etc/letsencrypt/live/cocoblue.me/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/cocoblue.me/privkey.pem;

#     location / {
#         proxy_pass http://frontend:3000;
#         proxy_set_header    Host                $http_host;
#         proxy_set_header    X-Real-IP           $remote_addr;
#         proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
#     }

#     location /images/ {
#         rewrite ^/images(/.*)$ $1 break;
#         root /var/www/broadcast/images;
#     }

#     location /robots.txt {
#         return 200 "User-agent: *\nDisallow: /";
#     }
# }
# user  nginx;
# worker_processes  auto;
# error_log  /var/log/nginx/error.log warn;
# pid        /var/run/nginx.pid;
# events {
#     worker_connections  1024;
# }
# http {
#     include       /etc/nginx/mime.types;
#     default_type  application/octet-stream;

# 	# 백엔드 upstream 설정
#     upstream myweb-api {
#         server api:8080;
#     }

# 	# 프론트엔드 upstream 설정
#     upstream frontend-container {
#         server frontend:3000;
#     }

#     server {
#         listen 80;

# 		# /api 경로로 오는 요청을 백엔드 upstream 의 /api 경로로 포워딩
#         location /api {
#             proxy_pass         http://myweb-api/api;
#         }

# 		# / 경로로 오는 요청을 프론트엔드 upstream 의 / 경로로 포워딩
#         location / {
#             proxy_pass         http://frontend-container/;
#         }
#     }
#     log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#                       '$status $body_bytes_sent "$http_referer" '
#                       '"$http_user_agent" "$http_x_forwarded_for"';
#     access_log  /var/log/nginx/access.log  main;

#     sendfile        on;
#     keepalive_timeout  65;
#     include /etc/nginx/conf.d/*.conf;
# }